name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    name: Build Backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
            repository: kevin-mashaba/old-mutual

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test backend
        run: mvn clean install -DskipTests=false

      - name: Run unit tests
        run: mvn test

      - name: Run integration tests
        run: mvn verify

  frontend:
    runs-on: ubuntu-latest
    name: Build and Test Frontend
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: kevin-mashaba/old-mutual

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build Angular application
        run: npm run build --dev

      - name: Run frontend unit tests
        run: npm run test -- --watch=false --browsers=ChromeHeadlessCI

      - name: Run frontend e2e tests
        run: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Localhost
    needs: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: kevin-mashaba/old-mutual

      - name: Deploy backend
        run: |
          mvn clean package -DskipTests=true
          
          scp -o StrictHostKeyChecking=no target/*.jar kevinm@localhost:/Downloads/Flag-Explorer
          
            pkill -f 'java -jar' || true
                      nohup java -jar /Downloads/Flag-Explorer/backend/*.jar & 
          EOF

      - name: Deploy frontend  to localhost
        run: |
          scp -o StrictHostKeyChecking=no target/*.jar kevinm@localhost:/Downloads/Flag-Explorer -r dist/Flag-Explorer/front-end* kevinm@localhost:/Flag-Explorer/front-end/
          
          ssh -o StrictHostKeyChecking=no -i kevinm@localhost << 'EOF'
            pkill -f 'ng serve' || true
          
            cd /Flag-Explorer/front-end
            nohup npx http-server -p 80 & 
          EOF

  notify:
    runs-on: ubuntu-latest
    name: Notify on success or failure
    needs: deploy
    steps:
      - name: Notify success or failure
        run: |
          if [[ ${{ job.status }} == 'success' ]]; then
            echo "Deployment successful!"
          else
            echo "Deployment failed!"
            exit 1
